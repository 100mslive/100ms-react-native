
update_fastlane

default_platform(:ios)

platform :ios do

  desc "Distributes the Runner iOS app on Firebase & TestFlight."
  lane :distribute_app do

    bump_version
    
    compile_app

    # upload_symbols
    
    distribute_on_firebase

    distribute_on_testflight

    post_message_on_slack
    
  end 


  lane :bump_version do
    increment_build_number()

    increment_version_number(
      bump_type: "patch"
    )
  end


  lane :compile_app do
    gym(
      scheme: "RNHMSExample",
      workspace: "./RNHMSExample.xcworkspace",
      include_symbols: true,
      export_method: "ad-hoc",
      export_options: {
        provisioningProfiles: { 
          "live.100ms.reactnative" => "ReactNativeDistributionCertificate",
          "live.100ms.reactnative.RNHMSExampleBroadcastUpload" => "ReactNativeAdhocBroadcastUploadExtension"
        }
      }
    )
  end


  # private_lane :upload_symbols do
    
  #   dsym_zip(
  #     archive_path: lane_context[SharedValues::XCODEBUILD_ARCHIVE],
  #     all: false
  #   )  

  #   upload_symbols_to_crashlytics(
  #     dsym_paths: [lane_context[SharedValues::DSYM_OUTPUT_PATH], lane_context[SharedValues::DSYM_ZIP_PATH]],
  #     gsp_path: "./RNHMSExample/GoogleService-Info.plist",
  #   )
  # end

  private_lane :distribute_on_firebase do
    firebase_app_distribution(
      app: "1:408505141940:ios:1d2339892d9ffd8cc325e1",
      groups: "internal, External",
      service_credentials_file: "reactnative-hms-a32ef61302c5.json",
      release_notes_file: "../ExampleAppChangelog.txt",
      ipa_path: lane_context[SharedValues::IPA_OUTPUT_PATH]
    )
  end


  private_lane :distribute_on_testflight do
    gym(
      scheme: "RNHMSExample",
      workspace: "./RNHMSExample.xcworkspace",
      include_symbols: true,
      export_method: "app-store",
      export_options: {
        provisioningProfiles: { 
          "live.100ms.reactnative" => "ReactNativeAppStore",
          "live.100ms.reactnative.RNHMSExampleBroadcastUpload" => "ReactNativeAppStoreBroadcastUploadExtension"
        }
      }
    )

    api_key = app_store_connect_api_key(
      key_id: "BY94A5BH9T",
      issuer_id: "7b598151-7443-44b8-a7e8-d5d48cb40412",
      key_filepath: "./AuthKey_BY94A5BH9T.p8",
      duration: 1200, 
      in_house: false
    ) 

    pilot(
      api_key: api_key,
      app_identifier: "live.100ms.reactnative",
      notify_external_testers: true,
      demo_account_required: false,
      changelog: File.read("../../ExampleAppChangelog.txt"),
      distribute_external: true,
      notify_external_testers: true,
      groups: 'External',
      reject_build_waiting_for_review: true
    )
  end


  lane :post_message_on_slack do
    
    build_number = get_build_number(xcodeproj: "./RNHMSExample.xcodeproj")
    version = get_version_number_from_plist(
      target: 'RNHMSExample'
    )
    
    slack(
      message: ":react: 🎉 React Native iOS App released! 🎊 :react:",
      slack_url: "https://hooks.slack.com/services/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",
      payload: {
        "📲 Download from Firebase 🔥" => "https://appdistribution.firebase.dev/i/bdfa6517b69c31d6", 
        "📲 Download from TestFlight 🍎" => "https://testflight.apple.com/join/v4bSIPad",
        "📝 Changelog with Tickets" => File.read("../../ExampleAppChangelog.txt")   
      },
      default_payloads: ["git_branch"],
      attachment_properties: {      
        fields: [{
          title: "🎊 App Version",
          value: version + " (" + build_number + ")",
          short: false 
        }]
      }
    )
  end

end
